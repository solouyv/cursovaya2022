/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 16.0 		*/
/*  Created On : 19-окт-2022 20:23:53 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Sequences for Autonumber Columns */

DROP SEQUENCE IF EXISTS currency_id_seq
;

DROP SEQUENCE IF EXISTS customer_id_seq
;

DROP SEQUENCE IF EXISTS dailycashamount_id_seq
;

DROP SEQUENCE IF EXISTS deal_id_seq
;

DROP SEQUENCE IF EXISTS role_id_seq
;

DROP SEQUENCE IF EXISTS salary_level_seq
;

DROP SEQUENCE IF EXISTS user_id_seq
;

/* Drop Tables */

DROP TABLE IF EXISTS "Currency" CASCADE
;

DROP TABLE IF EXISTS "Customer" CASCADE
;

DROP TABLE IF EXISTS "DailyCashAmount" CASCADE
;

DROP TABLE IF EXISTS "Deal" CASCADE
;

DROP TABLE IF EXISTS "Role" CASCADE
;

DROP TABLE IF EXISTS "Salary" CASCADE
;

DROP TABLE IF EXISTS "User" CASCADE
;

/* Create Tables */

CREATE TABLE "Currency"
(
    id       integer     NOT NULL DEFAULT NEXTVAL(('"currency_id_seq"'::text)::regclass),
    code     varchar(10) NOT NULL,
    data     date        NOT NULL,
    rate_in  money       NOT NULL,
    rate_out money       NOT NULL
)
;

CREATE TABLE "Customer"
(
    id           integer     NOT NULL DEFAULT NEXTVAL(('"customer_id_seq"'::text)::regclass),
    first_name   varchar(50) NOT NULL,
    last_name    varchar(50) NOT NULL,
    passport_id  varchar(50) NOT NULL,
    bank_card_id varchar(50) NULL
)
;

CREATE TABLE "DailyCashAmount"
(
    id          integer NOT NULL DEFAULT NEXTVAL(('"dailycashamount_id_seq"'::text)::regclass),
    currency_id integer NOT NULL,
    amount      money   NOT NULL
)
;

CREATE TABLE "Deal"
(
    id                integer NOT NULL DEFAULT NEXTVAL(('"deal_id_seq"'::text)::regclass),
    customer_id       integer NOT NULL,
    user_id           integer NOT NULL,
    currency_in_id    integer NOT NULL,
    currency_out_id   integer NOT NULL,
    currency_in_count money   NOT NULL,
    data              date    NOT NULL,
    time              time    NOT NULL
)
;

CREATE TABLE "Role"
(
    id   integer     NOT NULL DEFAULT NEXTVAL(('"role_id_seq"'::text)::regclass),
    name varchar(50) NOT NULL
)
;

CREATE TABLE "Salary"
(
    level           integer NOT NULL DEFAULT NEXTVAL(('"salary_level_seq"'::text)::regclass),
    salary          money   NOT NULL,
    salary_increase integer NOT NULL
)
;

CREATE TABLE "User"
(
    id                  integer     NOT NULL DEFAULT NEXTVAL(('"user_id_seq"'::text)::regclass),
    email               varchar(50) NULL,
    first_name          varchar(50) NOT NULL,
    last_name           varchar(50) NOT NULL,
    has_salary_increase boolean     NOT NULL DEFAULT true,
    password            varchar(50) NOT NULL,
    role_id             integer     NOT NULL,
    level_id            integer     NOT NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE "Currency"
    ADD CONSTRAINT "PK_Currency"
        PRIMARY KEY (id)
;

ALTER TABLE "Customer"
    ADD CONSTRAINT "PK_Customer"
        PRIMARY KEY (id)
;

ALTER TABLE "DailyCashAmount"
    ADD CONSTRAINT "PK_DailyCashAmount"
        PRIMARY KEY (id)
;

CREATE INDEX "IXFK_DailyCashAmount_Currency" ON "DailyCashAmount" (currency_id ASC)
;

ALTER TABLE "Deal"
    ADD CONSTRAINT "PK_Deal"
        PRIMARY KEY (id)
;

CREATE INDEX "IXFK_Deal_Currency" ON "Deal" (currency_in_id ASC)
;

CREATE INDEX "IXFK_Deal_Currency_02" ON "Deal" (currency_out_id ASC)
;

CREATE INDEX "IXFK_Deal_Customer" ON "Deal" (customer_id ASC)
;

CREATE INDEX "IXFK_Deal_User" ON "Deal" (user_id ASC)
;

ALTER TABLE "Role"
    ADD CONSTRAINT "PK_Role"
        PRIMARY KEY (id)
;

ALTER TABLE "Salary"
    ADD CONSTRAINT "PK_Salary"
        PRIMARY KEY (level)
;

ALTER TABLE "User"
    ADD CONSTRAINT "PK_User"
        PRIMARY KEY (id)
;

CREATE INDEX "IXFK_User_Role" ON "User" (role_id ASC)
;

CREATE INDEX "IXFK_User_Salary" ON "User" (level_id ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE "DailyCashAmount"
    ADD CONSTRAINT "FK_DailyCashAmount_Currency"
        FOREIGN KEY (currency_id) REFERENCES "Currency" (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "Deal"
    ADD CONSTRAINT "FK_Deal_Currency"
        FOREIGN KEY (currency_in_id) REFERENCES "Currency" (id) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE "Deal"
    ADD CONSTRAINT "FK_Deal_Currency_02"
        FOREIGN KEY (currency_out_id) REFERENCES "Currency" (id) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE "Deal"
    ADD CONSTRAINT "FK_Deal_Customer"
        FOREIGN KEY (customer_id) REFERENCES "Customer" (id) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE "Deal"
    ADD CONSTRAINT "FK_Deal_User"
        FOREIGN KEY (user_id) REFERENCES "User" (id) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE "User"
    ADD CONSTRAINT "FK_User_Role"
        FOREIGN KEY (role_id) REFERENCES "Role" (id) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE "User"
    ADD CONSTRAINT "FK_User_Salary"
        FOREIGN KEY (level_id) REFERENCES "Salary" (level) ON DELETE Restrict ON UPDATE Cascade
;

/* Create Table Comments, Sequences for Autonumber Columns */

CREATE SEQUENCE currency_id_seq INCREMENT 1 START 30
;

CREATE SEQUENCE customer_id_seq INCREMENT 1 START 30
;

CREATE SEQUENCE dailycashamount_id_seq INCREMENT 1 START 30
;

CREATE SEQUENCE deal_id_seq INCREMENT 1 START 30
;

CREATE SEQUENCE role_id_seq INCREMENT 1 START 30
;

CREATE SEQUENCE salary_level_seq INCREMENT 1 START 30
;

CREATE SEQUENCE user_id_seq INCREMENT 1 START 30
;

create view user_view_with_roles(user_id, "user", password, email, role) as
SELECT u.id                                                   AS user_id,
       (u.first_name::text || ' '::text) || u.last_name::text AS "user",
       u.password,
       u.email,
       r.name                                                 AS role
FROM "User" u
         LEFT JOIN "Role" r ON u.role_id = r.id
;

alter table user_view_with_roles
    owner to postgres
;

create view daily_currency_rate_view(id, code, rate_in, rate_out, data) as
SELECT "Currency".id,
       "Currency".code,
       "Currency".rate_in::numeric,
       "Currency".rate_out::numeric,
       "Currency".data
FROM "Currency"
ORDER BY "Currency".id DESC
LIMIT 5
;

alter table daily_currency_rate_view
    owner to postgres
;

create view get_card_ids(bank_card_id) as
SELECT "Customer".bank_card_id
FROM "Customer"
WHERE "Customer".bank_card_id IS NOT NULL
  AND "Customer".bank_card_id::text <> ''::text;

alter table get_card_ids
    owner to postgres;

